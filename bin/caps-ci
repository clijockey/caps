#!/bin/bash

root_dir=$(cd $(dirname $BASH_SOURCE)/.. && pwd)
source $root_dir/bin/common
common::initialize

set -e

usage () {
    echo -e "\n${BLUE}USAGE: caps-ci logout | login\n"
    echo -e "    This utility will create an SSH tunnel to the Concourse environment that"
    echo -e "    runs the automation pipelines. It will also initialize the 'fly' CLI and"
    echo -e "    create a target to this concourse environment.\n"
}

case "$1" in
    -?|--help|help)
        usage
        exit 0
        ;;
    login)
        shift
        while [[ $# -gt 0 ]]; do
            case "$1" in
                -v|--debug)
                    set -x
                    ;;
                *)
                    echo -e "ERROR! Unknown option or argument value $1.\n"
                    usage
                    exit 1
                    ;;
            esac
            shift
        done
        ;;
    logout)
        shift
        [[ $# -eq 0 ]] || echo -e "\nLogging out of tunnel. Additional arguments '$@' will be ignored.\n"

        ps -ef | awk '/8080\:127\.0\.0\.1\:8080/{ print $2 }' | sudo xargs kill -15
        exit 0
        ;;
    *)
        usage
        exit 1
        ;;
esac

common::read_terraform_output

host=$(echo -e "$tf_output" | awk '/bastion_admin_fqdn =/{ print $3 }')
password=$(echo -e "$tf_output" | awk '/concourse_admin_password =/{ print $3 }')

if [[ -z $host || -z $password ]]; then
    echo -e "\nERROR! Failed to retrieve required deployment attributes.\n"
    exit 1
fi

echo -e "\nChecking connectivity to $host...\n  * This will hang if you are not logged on to the VPN."
nc -v -z -w 1 $host 22 >/dev/null 2>&1
if [[ $? -ne 0 ]]; then
    echo "ERROR! Unable to reach SSH port of $host."
    exit 1
fi

echo -e "\nCreating SSH tunnel in order to access Concourse."
ps -ef | awk '/8080\:127\.0\.0\.1\:8080/{ print $2 }' | sudo xargs kill -15
ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no \
    -i $workspace_path/vpn-admin-ssh-key.pem vpn_admin@$host \
    -L 8080:127.0.0.1:8080 -N >/dev/null 2>&1 &

sleep 2
fly -t local login -k -c http://localhost:8080 -u admin -p $password >/dev/null 2>&1
if [[ $? -ne 0 ]]; then
    echo "ERROR! Unable to login to Concourse using the fly CLI."
    exit 1
fi

fly -t local sync >/dev/null 2>&1

echo -e "\nThe Concourse UI is available via the following URL: http://localhost:8080\n"
echo -e "user: admin"
echo -e "password: $password\n"
