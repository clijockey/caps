# Pivnet token for downloading resources from Pivnet. Find this token at https://network.pivotal.io/users/dashboard/edit-profile
pivnet_token: WTPf8AQK6FMczvuxhmqM

#
# Google Cloud Platform credentials and parameters
#

# GCP project to create the infrastructure in
gcp_project_id: $GCP_PROJECT_ID

# GCP credentials JSON. The service account must have the Editor role.
gcp_service_account_key: "$GCP_SERVICE_ACCOUNT_KEY"
# GCP region
gcp_region: $GCP_REGION

# GCP Zones
gcp_zone_1: $GCP_ZONE_1
gcp_zone_2: $GCP_ZONE_2
gcp_zone_3: $GCP_ZONE_3

# Identifier to prepend to GCP infrastructure names/labels; this should be globally unique
gcp_resource_prefix: $GCP_RESOURCE_PREFIX

# GCP Interopable storage access key: https://console.cloud.google.com/storage/settings
gcp_storage_access_key: $GCP_STORAGE_ACCESS_KEY
gcp_storage_secret_key: $GCP_STORAGE_SECRET_KEY

# Storage Location
gcp_storage_bucket_location: $GCP_STORAGE_BUCKET_LOCATION

# Bucket where state file will be persisted
terraform_statefile_bucket: $TERRAFORM_STATEFILE_BUCKET

#
# Ops Manager
#

# Operations Manager credentials to set
# opsman_admin_username/opsman_admin_password needs to be specified
opsman_admin_username: $OPSMAN_ADMIN_USERNAME
opsman_admin_password: $OPSMAN_ADMIN_PASSWORD

# This should be your pcf_ert_domain with "opsman." as a prefix
opsman_domain_or_ip_address: $OPSMAN_DOMAIN_OR_IP_ADDRESS

# PCF Ops Manager minor version to track
opsman_major_minor_version: $OPSMAN_MAJOR_MINOR_VERSION

# Optional PEM-encoded certificates to add to BOSH director
opsman_trusted_certs: "$OPSMAN_TRUSTED_CERTS"

#
# Runtime Configuration
#

# Ciphers
# An ordered, colon-delimited list of Golang supported TLS cipher suites in OpenSSL format.
# Operators should verify that these are supported by any clients or downstream components that will initiate TLS handshakes with the Router/HAProxy.
# The recommended settings are filled in below, change as necessary.
router_tls_ciphers: "ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384"
haproxy_tls_ciphers: "DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384"

# C2C Networking network CIDR
container_networking_nw_cidr: 10.255.0.0/16

# For credhub integration, replace dummy values in the following structure
# and set the number of credhub instances in resource config to 2
# For credhub integration, Set the number of credhub instances in resource config to 2
# Primary Encryption Name MUST match one of the encryption key names provided
# Encryption keys 2 and 3 are optional
credhub_primary_encryption_name: $PRIMARY_CREDHUB_ENCRYPTION_KEY_NAME
credhub_encryption_key_name1: $PRIMARY_CREDHUB_ENCRYPTION_KEY_NAME
credhub_encryption_key_secret1: $PRIMARY_CREDHUB_ENCRYPTION_KEY_SECRET
credhub_encryption_key_name2: # Optional Name 2
credhub_encryption_key_secret2: # Optional Secret 2
credhub_encryption_key_name3: # Optional Name 3
credhub_encryption_key_secret3: # Optional Secret 2

# DB Creds
# Usernames must be 16 characters or fewer
db_accountdb_username: $PAS_SYSTEM_DBUSERNAME
db_accountdb_password: $PAS_SYSTEM_DBPASSWORD
db_app_usage_service_username: $PAS_SYSTEM_DBUSERNAME
db_app_usage_service_password: $PAS_SYSTEM_DBPASSWORD
db_autoscale_username: $PAS_SYSTEM_DBUSERNAME
db_autoscale_password: $PAS_SYSTEM_DBPASSWORD
db_ccdb_username: $PAS_SYSTEM_DBUSERNAME
db_ccdb_password: $PAS_SYSTEM_DBPASSWORD
db_diego_username: $PAS_SYSTEM_DBUSERNAME
db_diego_password: $PAS_SYSTEM_DBPASSWORD
db_locket_username: $PAS_SYSTEM_DBUSERNAME
db_locket_password: $PAS_SYSTEM_DBPASSWORD
db_networkpolicyserverdb_username: $PAS_SYSTEM_DBUSERNAME
db_networkpolicyserverdb_password: $PAS_SYSTEM_DBPASSWORD
db_nfsvolumedb_username: $PAS_SYSTEM_DBUSERNAME
db_nfsvolumedb_password: $PAS_SYSTEM_DBPASSWORD
db_notifications_username: $PAS_SYSTEM_DBUSERNAME
db_notifications_password: $PAS_SYSTEM_DBPASSWORD
db_routing_username: $PAS_SYSTEM_DBUSERNAME
db_routing_password: $PAS_SYSTEM_DBPASSWORD
db_silk_username: $PAS_SYSTEM_DBUSERNAME
db_silk_password: $PAS_SYSTEM_DBPASSWORD
db_uaa_username: $PAS_SYSTEM_DBUSERNAME
db_uaa_password: $PAS_SYSTEM_DBPASSWORD

# Domain Names for ERT
pcf_ert_domain: $PCF_ERT_DOMAIN # This is the domain you will access ERT with
system_domain: $SYSTEM_DOMAIN # e.g. system.pcf.example.com
apps_domain: $APPS_DOMAIN   # e.g. apps.pcf.example.com

# Errands to disable prior to deploying ERT
# Valid values:
#   all
#   none
#   "" (empty string)
#   Any combination of the following, separated by comma:
#     smoke-tests
#     push-apps-manager
#     notifications
#     notifications-ui
#     push-pivotal-account
#     autoscaling
#     autoscaling-register-broker
#     nfsbrokerpush
ert_errands_to_disable: $ERT_ERRANDS_TO_DISABLE

# PCF Elastic Runtime minor version to track
ert_major_minor_version: $ERT_MAJOR_MINOR_VERSION

# Required if haproxy_forward_tls is enabled - HAProxy will use the CA provided to verify the certificates provided by the router.
haproxy_backend_ca:

# If enabled HAProxy will forward all requests to the router over TLS (enable|disable)
haproxy_forward_tls: disable

# Optional - these certificates can be used to validate the certificates from incoming client requests.
# All CA certificates should be appended together into a single collection of PEM-encoded entries.
routing_custom_ca_certificates:

# Disable HTTP on gorouters (true|false)
routing_disable_http: false

# Support for the X-Forwarded-Client-Cert header. Possible values: (load_balancer|ha_proxy|router)
routing_tls_termination: ha_proxy

# Whether to enable MySQL backups. (disable|s3|scp)
mysql_backups: disable

#S3 backup config params (leave empty values if you're not using s3)
mysql_backups_s3_access_key_id:
mysql_backups_s3_bucket_name:
mysql_backups_s3_bucket_path:
mysql_backups_s3_cron_schedule:
mysql_backups_s3_endpoint_url:
mysql_backups_s3_secret_access_key:

#SCP backup config params (leave empty values if you're not using scp)
mysql_backups_scp_cron_schedule:
mysql_backups_scp_destination:
mysql_backups_scp_key:
mysql_backups_scp_port:
mysql_backups_scp_server:
mysql_backups_scp_user:

# Email address for sending mysql monitor notifications
mysql_monitor_recipient_email: $MYSQL_MONITOR_RECIPIENT_EMAIL

# Optional. If blank the cert(s) will be generated:
poe_ssl_name1:
poe_ssl_cert1:
poe_ssl_key1:

# Setting appropriate Application Security Groups is critical for a secure
# deployment. Change the value of the param below to "X" to acknowledge that
# once the Elastic Runtime deployment completes, you will review and set the
# appropriate application security groups.
# See https://docs.pivotal.io/pivotalcf/opsguide/app-sec-groups.html
security_acknowledgement: X

# Whether or not the ERT VMs are internet connected.
internet_connected: $INTERNET_CONNECTED
