---

groups:
- name: "‣ Backup PCF"
  jobs:
  - backup-pcf
- name: "‣ Restore PCF"
  jobs:
  - restore-ops-manager
  - restore-elastic-runtime

jobs:

#
# Backup Pivotal Ops Manager and Cloud Foundry
#

- name: backup-pcf
  serial: true
  serial_groups: [backups]
  plan:

  - aggregate:
    - get: pipeline-src
    - get: daily
      trigger: true

  - task: prepare-backup
    privileged: true
    config:
      platform: linux
      image_resource: *automation-image-resource
      inputs:
      - name: pipeline-src
      run:
        path: pipeline-src/scripts/prepare-opsman-backup.sh
      outputs:
      - name: backup-timestamp
      - name: job-session
    params: 
      <<: *backup-restore-common-params
      <<: *backup-restore-storage-params

  - aggregate:

    - task: backup-opsman
      privileged: true
      config:
        platform: linux
        image_resource: *automation-image-resource
        inputs:
        - name: pipeline-src
        - name: backup-timestamp
        - name: job-session
        run:
          path: pipeline-src/scripts/backup-opsman.sh
      params: 
        <<: *backup-restore-common-params
        <<: *backup-restore-storage-params

    - task: backup-director
      privileged: true
      config:
        platform: linux
        image_resource: *automation-image-resource
        inputs:
        - name: pipeline-src
        - name: backup-timestamp
        - name: job-session
        run:
          path: pipeline-src/scripts/bbr-backup-director.sh
      params: 
        <<: *backup-restore-common-params
        <<: *backup-restore-storage-params
    
    - task: backup-pas-tile
      privileged: true
      config:
        platform: linux
        image_resource: *automation-image-resource
        inputs:
        - name: pipeline-src
        - name: backup-timestamp
        - name: job-session
        run:
          path: pipeline-src/scripts/bbr-backup-deployment.sh
          args:
          - "cf-."
          - "ert"
      params: 
        <<: *backup-restore-common-params
        <<: *backup-restore-storage-params

  - task: cleanup
    privileged: true
    config:
      platform: linux
      image_resource: *automation-image-resource
      inputs:
      - name: pipeline-src
      - name: backup-timestamp
      run:
        path: pipeline-src/scripts/cleanup-backup.sh
        args: 
        - {{backup_age}}
    params: 
      <<: *backup-restore-common-params
      <<: *backup-restore-storage-params

#
# Restore Ops Manager by importing backed up installation export 
# archive followed by director before apply all changes
#

- name: restore-ops-manager
  serial: true
  serial_groups: [backups]
  plan:

  - aggregate:
    - get: pipeline-src

  - task: import-ops-manager-backup
    privileged: true
    config:
      platform: linux
      image_resource: *automation-image-resource
      inputs:
      - name: pipeline-src
      run:
        path: pipeline-src/scripts/restore-opsman.sh
      outputs:
      - name: job-session
    params: 
      <<: *backup-restore-common-params
      <<: *backup-restore-storage-params
      PIVNET_API_TOKEN: {{pivnet_api_token}}

  - task: restore-director
    privileged: true
    config:
      platform: linux
      image_resource: *automation-image-resource
      inputs:
      - name: pipeline-src
      - name: job-session
      run:
        path: pipeline-src/scripts/bbr-restore-director.sh
    params: 
      <<: *backup-restore-common-params
      <<: *backup-restore-storage-params

  - task: apply-changes
    privileged: true
    config:
      platform: linux
      image_resource: *automation-image-resource
      run:
        path: pipeline-src/scripts/opsman-apply-changes.sh
    params: 
      <<: *backup-restore-common-params

#
# Restore Elastic Runtime
#

- name: restore-elastic-runtime
  serial: true
  serial_groups: [backups]
  plan:

  - aggregate:
    - get: pipeline-src

  - task: prepare-opsman-restore
    privileged: true
    config:
      platform: linux
      image_resource: *automation-image-resource
      inputs:
      - name: pipeline-src
      run:
        path: pipeline-src/scripts/prepare-opsman-restore.sh
      outputs:
      - name: job-session
    params: 
      <<: *backup-restore-common-params
      <<: *backup-restore-storage-params

  - task: scale-down-ert-mysql
    privileged: true
    config:
      platform: linux
      image_resource: *automation-image-resource
      inputs:
      - name: pipeline-src
      - name: job-session
      run:
        path: pipeline-src/scripts/opsman-scale-deployment.sh
        args: ["cf-", "mysql", 1]
    params: 
      <<: *backup-restore-common-params

  - task: scale-down-ert-mysql-apply
    privileged: true
    config:
      platform: linux
      image_resource: *automation-image-resource
      inputs:
      - name: pipeline-src
      - name: job-session
      run:
        path: pipeline-src/scripts/opsman-apply-changes.sh
        args: [no_errands]
    params: 
      <<: *backup-restore-common-params

  - task: restore-ert
    privileged: true
    config:
      platform: linux
      image_resource: *automation-image-resource
      inputs:
      - name: pipeline-src
      - name: job-session
      run:
        path: pipeline-src/scripts/bbr-restore-deployment.sh
        args: ["cf-.", "ert"]
    params: 
      <<: *backup-restore-common-params
      <<: *backup-restore-storage-params

  - task: scale-up-ert-mysql
    privileged: true
    config:
      platform: linux
      image_resource: *automation-image-resource
      inputs:
      - name: pipeline-src
      - name: job-session
      run:
        path: pipeline-src/scripts/opsman-scale-deployment.sh
        args: ["cf-", "mysql", 3]
    params: 
      <<: *backup-restore-common-params

  - task: scale-up-ert-mysql-apply
    privileged: true
    config:
      platform: linux
      image_resource: *automation-image-resource
      inputs:
      - name: pipeline-src
      - name: job-session
      run:
        path: pipeline-src/scripts/opsman-apply-changes.sh
        args: [no_errands]
    params: 
      <<: *backup-restore-common-params

resources:

- name: pipeline-src
  type: git
  source:
    uri: {{pipeline_src_repo}}
    branch: {{pipeline_src_repo_branch}}

- name: daily
  type: time
  source:
    interval: {{backup_interval}}
    location: {{locale}}
    start: {{backup_interval_start}}
    stop: {{backup_interval_end}}

shared:

- &automation-image-resource
  type: docker-image
  source:
    repository: {{automation_image}}
    insecure_registries: [ {{docker_insecure_registries}} ]
    username: {{docker_registry_user}}
    password: {{docker_registry_pass}}

- &backup-restore-common-params
  TRACE: {{trace_tasks}}
  SSH_KEY: {{ssh_key}}
  OPSMAN_HOST: {{opsman_host}}
  OPSMAN_USER: {{opsman_user}}
  OPSMAN_PASSWD: {{opsman_passwd}}
  OPSMAN_SSH_USER: {{opsman_ssh_user}}
  OPSMAN_SSH_PASSWD: {{opsman_ssh_passwd}}
  OPSMAN_PASS_PHRASE: {{opsman_pass_phrase}}
  PCFOPS_CLIENT: {{pcfops_client}}
  PCFOPS_SECRET: {{pcfops_secret}}

- &backup-restore-storage-params

  ## Backup storage backend type should be one of 'scp', 's3', 'swift'
  BACKUP_TYPE: {{backup_storage_type}}
  BACKUP_TARGET: {{backup_target}}
  
  ## Params to upload backups to S3 Storage
  S3_ENDPOINT: {{s3_endpoint}}
  S3_BUCKET_NAME: {{s3_bucket_name}}
  AWS_ACCESS_KEY_ID: {{aws_access_key_id}}
  AWS_SECRET_ACCESS_KEY: {{aws_secret_access_key}}
  AWS_REGION: {{aws_region}}

  # Params to upload backups to OpenStack Swift Storage
  OS_AUTH_URL: {{os_auth_url}}
  OS_IDENTITY_API_VERSION: {{os_identity_api_version}}
  OS_PROJECT_DOMAIN_NAME: {{os_project_domain_name}}
  OS_PROJECT_NAME: {{os_project_name}}
  OS_USER_DOMAIN_NAME: {{os_user_domain_name}}
  OS_USERNAME: {{os_username}}
  OS_PASSWORD: {{os_password}}

  ## Mount options to upload backups via a remote mount. This
  ## removes the need to have sufficient disk space on the 
  ## concourse workers as backups are downloaded directly
  ## to the mount path. Only one of S3FS/Cloudfuse/NFS
  ## maybe used. To configure the correct mount simply
  ## set the mount path.
  MOUNT_OPTIONS: {{mount_options}}

  ## S3FS mount path
  S3FS_MOUNT: {{s3fs_mount}}
  S3FS_USE_PATH_REQUEST_STYLE: {{s3fs_use_path_request_style}}

  ## Cloudfuse mount path
  CLOUDFUSE_MOUNT: {{cloudfuse_mount}}

  ## NFS mount path
  NFS_MOUNT: {{nfs_mount}}
