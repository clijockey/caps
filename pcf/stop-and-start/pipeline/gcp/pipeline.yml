---

jobs:

#
# Stop PCF
#

- name: stop-check
  plan:  

  - get: stop-schedule
    trigger: true
  - get: started
  - get: pcf-pipelines

  # If an "apply" is in progress on PCF Ops 
  # Manager then wait until it completes
  - task: wait-opsman-clear
    file: pcf-pipelines/tasks/wait-opsman-clear/task.yml
    params:
      OPSMAN_DOMAIN_OR_IP_ADDRESS: {{opsman_host}}
      OPSMAN_USERNAME: {{opsman_user}}
      OPSMAN_PASSWORD: {{opsman_passwd}}
      OPSMAN_CLIENT_ID: {{pcfops_client}}
      OPSMAN_CLIENT_SECRET: {{pcfops_secret}}

- name: stop-pcf
  serial: true
  serial_groups: [stop-and-start]
  plan:

  - aggregate:
    - get: automation
    - get: started
      passed: [stop-check]
      trigger: false

  - task: new-job-session
    file: automation/tasks/opsman/new-job-session/task.yml
    params: 
      <<: *params

  - task: stop-deployments
    file: automation/tasks/bosh/stop-deployment/task.yml
    params: 
      <<: *params

  - task: save-state
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: 
          repository: appbricks/automation-tools
      inputs:
      - name: started
      run:
        path: /bin/bash
        args:
        - -c
        - |
          version=$(cat started/version)
          mc config host add auto $AUTOS3_URL $AUTOS3_ACCESS_KEY $AUTOS3_SECRET_KEY
          mc find auto/pcf/started --name "started-*" --exec "mc rm {}"
          mc cp started-$version auto/pcf/started/started-$version          
    params: 
      AUTOS3_URL: ((autos3_url))
      AUTOS3_ACCESS_KEY: ((autos3_access_key))
      AUTOS3_SECRET_KEY: ((autos3_secret_key))
        
#
# Start PCF
#

- name: start-check
  plan:
  - get: start-schedule
    trigger: true
  - get: stopped

- name: start-pcf
  serial: true
  serial_groups: [stop-and-start]
  plan:

  - aggregate:
    - get: automation
    - get: stopped
      passed: [start-check]
      trigger: false

  - task: new-job-session
    file: automation/tasks/opsman/new-job-session/task.yml
    params: 
      <<: *params

  - task: start-deployments
    file: automation/tasks/bosh/start-deployment/task.yml
    params: 
      <<: *params

  - task: save-state
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: 
          repository: appbricks/automation-tools
      inputs:
      - name: stopped
      run:
        path: /bin/bash
        args:
        - -c
        - |
          version=$(($(cat stopped/version)+1))
          mc config host add auto $AUTOS3_URL $AUTOS3_ACCESS_KEY $AUTOS3_SECRET_KEY
          mc find auto/pcf/stopped --name "stopped-*" --exec "mc rm {}"
          mc cp stopped-$version auto/pcf/stopped/stopped-$version          
    params: 
      AUTOS3_URL: ((autos3_url))
      AUTOS3_ACCESS_KEY: ((autos3_access_key))
      AUTOS3_SECRET_KEY: ((autos3_secret_key))

resources:

- name: pcf-pipelines
  type: git
  source:
    uri: https://github.com/pivotal-cf/pcf-pipelines.git
    branch: master

- name: automation
  type: git
  source:
    uri: {{automation_pipelines_url}}
    branch: {{automation_pipelines_branch}}

- name: started
  type: s3
  source:
    bucket: pcf
    endpoint: {{autos3_url}}
    access_key_id: {{autos3_access_key}}
    secret_access_key: {{autos3_secret_key}}
    regexp: started/started-(.*)

- name: stopped
  type: s3
  source:
    bucket: pcf
    endpoint: {{autos3_url}}
    access_key_id: {{autos3_access_key}}
    secret_access_key: {{autos3_secret_key}}
    regexp: stopped/stopped-(.*)

- name: start-schedule
  type: time
  source:
    location: {{locale}}
    start: {{start_trigger_start}}
    stop: {{start_trigger_stop}}

- name: stop-schedule
  type: time
  source:
    location: {{locale}}
    start: {{stop_trigger_start}}
    stop: {{stop_trigger_stop}}

shared:

- &params
  TRACE: {{trace_tasks}}
  IAAS: {{iaas}}
  GCP_PROJECT_ID: {{gcp_project_id}}
  GCP_SERVICE_ACCOUNT_KEY: {{gcp_service_account_key}}
  LABEL: {{label}}
  OPSMAN_HOST: {{opsman_host}}
  OPSMAN_USER: {{opsman_user}}
  OPSMAN_PASSWD: {{opsman_passwd}}
  OPSMAN_PASS_PHRASE: {{opsman_pass_phrase}}
  PCFOPS_CLIENT: {{pcfops_client}}
  PCFOPS_SECRET: {{pcfops_secret}}
